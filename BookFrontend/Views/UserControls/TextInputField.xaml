<UserControl x:Class="book_frontend.Views.UserControls.TextInputField"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             mc:Ignorable="d">
    <StackPanel>
        <!-- 
            图标
            - {RelativeSource AncestorType=UserControl} 实现了从子控件到父 UserControl 的属性绑定
            - IconKind属性在 TextInputField.xaml.cs隐藏文件中定义
            - 这是 WPF 中实现自定义控件属性传递的标准模式
         -->
        <materialDesign:PackIcon Kind="{Binding IconKind, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                 Style="{StaticResource InputFieldIconStyle}"
                                 Visibility="{Binding ShowIcon, RelativeSource={RelativeSource AncestorType=UserControl}, Converter={StaticResource BooleanToVisibilityConverter}}" />
        <!-- 
            文本输入框
            UpdateSourceTrigger：定义了绑定源何时被更新
                1. Default（默认）：使用绑定目标属性的默认更新行为；对于大多数控件属性，默认值是LostFocus
                2. PropertyChanged（属性更改）：当目标属性值发生变化时立即更新源；实时更新，最及时
                3. LostFocus（失去焦点）：当目标控件失去焦点时更新源；较为保守的更新策略
                4. Explicit（显式）：只能通过显式调用BindingExpression.UpdateSource()来更新源；最少的更新次数
         -->
        <TextBox x:Name="InputTextBox"
                 materialDesign:HintAssist.Hint="{Binding HintText, RelativeSource={RelativeSource AncestorType=UserControl}}"
                 materialDesign:HintAssist.IsFloating="True"
                 Style="{StaticResource CustomTextBoxStyle}"
                 Text="{Binding Text, RelativeSource={RelativeSource AncestorType=UserControl}, UpdateSourceTrigger=PropertyChanged}" />
    </StackPanel>
</UserControl>